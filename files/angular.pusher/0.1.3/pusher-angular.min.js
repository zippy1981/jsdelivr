"use strict";angular.module("pusher-angular",[]).factory("$pusher",["$rootScope","$q","$channel","$connection",function(e,t,n,r){function i(e){if(!(this instanceof i)){return new i(e)}this._assertValidClient(e);this.client=e;this.connection=r(e.connection,e);this.channels={}}i.prototype={subscribe:function(e){var t=n(this.client.subscribe(e),this);this.channels[e]=t;return t},unsubscribe:function(e){if(this.client.channel(e)){this.client.unsubscribe(e);if(this.channels[e]){delete this.channels[e]}}},bind:function(t,n){this.client.bind(t,function(t){n(t);e.$digest()})},bind_all:function(t){this.client.bind_all(function(n,r){t(n,r);e.$digest()})},disconnect:function(){this.client.disconnect()},channel:function(e){return this.channels[e]},allChannels:function(){return this.channels},_assertValidClient:function(e){if(!angular.isObject(e)||!angular.isObject(e.connection)||typeof e.channel!=="function"){throw new Error("Invalid Pusher client object")}}};return i}]).factory("$channel",["$rootScope","$q","$members",function(e,t,n){function r(e){if(e.indexOf("presence-")==-1&&e.indexOf("private-")==-1){throw new Error("Presence or private channel required")}}function i(e,t){if(!(this instanceof i)){return new i(e,t)}this._assertValidChannel(e);this.baseChannel=e;this.client=t;this.name=e.name;if(e.name.indexOf("presence")==-1){this.members=function(){throw new Error("Members object only exists for presence channels")}}else{this.members=n(e.members,e)}}i.prototype={bind:function(t,n){this.baseChannel.bind(t,function(t){n(t);e.$digest()})},bind_all:function(t){this.baseChannel.bind_all(function(n,r){t(n,r);e.$digest()})},trigger:function(e,t){r(this.name);if(e.indexOf("client-")==-1){throw new Error("Event name requires 'client-' prefix")}return this.baseChannel.trigger(e,t)},_assertValidChannel:function(e){if(!angular.isObject(e)||typeof e.name!=="string"){throw new Error("Invalid Pusher channel object")}}};return i}]).factory("$members",["$rootScope","$q",function(e,t){function n(t,r){if(!(this instanceof n)){return new n(t,r)}var i=this;this._assertValidMembers(t);this.baseMembers=t;this.baseChannel=r;this.me={};this.count=0;this.members={};r.bind("pusher:subscription_succeeded",function(t){i.me=t.me;i.count=t.count;i.members=t.members;e.$digest()});r.bind("pusher:member_added",function(t){i.count++;if(t.info){i.members[t.id.toString()]=t.info}else{i.members[t.id.toString()]=null}e.$digest()});r.bind("pusher:member_removed",function(t){i.count--;delete i.members[t.id.toString()];e.$digest()})}n.prototype={get:function(e){return this.baseMembers.get(e)},each:function(t){this.baseMembers.each(function(n){t(n);e.$digest()})},_assertValidMembers:function(e){if(!angular.isObject(e)||typeof e.me!=="object"){throw new Error("Invalid Pusher channel members object")}}};return n}]).factory("$connection",["$rootScope","$q",function(e,t){function n(e,t){if(!(this instanceof n)){return new n(e,t)}var r=this;this._assertValidConnection(e);this.baseConnection=e;this.baseClient=t}n.prototype={bind:function(t,n){this.baseConnection.bind(t,function(t){n(t);e.$digest()})},bind_all:function(t){this.baseConnection.bind_all(function(n,r){t(n,r);e.$digest()})},_assertValidConnection:function(e){if(!angular.isObject(e)){throw new Error("Invalid Pusher connection object")}}};return n}])